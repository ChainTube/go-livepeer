name: MacOS Build
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  build:
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    runs-on: macos-latest
    steps:
    - name: Set build environment
      run: echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # Needed for commands that depend on git tags
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.15.15'
    - name: Cache go modules
      id: cache-go-mod
      uses: actions/cache@v2.1.5
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-${{ matrix.arch }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.arch }}-go-
    - name: Cache ffmpeg
      id: cache-ffmpeg
      uses: actions/cache@v2.1.5
      with:
        path: ~/compiled
        key: ${{ runner.os }}-${{ matrix.arch }}-ffmpeg-${{ hashFiles('**/install_ffmpeg.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.arch }}-ffmpeg
    - name: Install dependencies
      run: brew install coreutils
    - name: Install go modules
      if: steps.cache-go-mod.outputs.cache-hit != 'true'
      run: go mod download
    - name: Install ffmpeg
      if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
      run: ./install_ffmpeg.sh
    - name: Build binaries
      run: |
        export PKG_CONFIG_PATH=~/compiled/lib/pkgconfig
        ./ci_env.sh make 
      env:
        GHA_REF: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref }}
    - name: Sign binaries
      env:
        MACOS_CERTIFICATE_ID: ${{ secrets.MACOS_CERTIFICATE_ID }}
        MACOS_CERTIFICATE_BASE64: ${{ secrets.MACOS_CERTIFICATE_BASE64 }}
        MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
      run: |
        set -euo pipefail
        TEMP_PASSWORD=$(uuidgen)
        echo $MACOS_CERTIFICATE_BASE64 | base64 --decode > certificate.cer
        security create-keychain -p $TEMP_PASSWORD build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p $TEMP_PASSWORD build.keychain
        security import certificate.cer -f pkcs12 -k build.keychain -T /usr/bin/codesign -P $MACOS_CERTIFICATE_PASSWORD
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $TEMP_PASSWORD build.keychain
        /usr/bin/codesign --force -s $MACOS_CERTIFICATE_ID livepeer livepeer_cli livepeer_bench livepeer_router
    - name: Upload build
      if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
      env: 
        GHA_REF: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref }}
        GCLOUD_KEY: ${{ secrets.GCLOUD_KEY }}
        GCLOUD_SECRET: ${{ secrets.GCLOUD_SECRET }}
        DISCORD_URL: ${{ secrets.DISCORD_URL }}
      run: ./upload_build.sh
 